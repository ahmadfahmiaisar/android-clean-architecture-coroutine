apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.5' //Use latest version
}
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}


task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    def coverageSourceDirs = [
            "src/main/java"
    ]
    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*'
    ]
    def javaClasses = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: fileFilter
    )
    def kotlinClasses = fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: fileFilter
    )
    classDirectories = files([ javaClasses ], [ kotlinClasses ])
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "output/code-coverage/connected/*.ec"
    ])
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


android {
    dataBinding {
        enabled = true
    }
    compileSdkVersion ApplicationConfig.compileSdk
    defaultConfig {
        applicationId ApplicationConfig.id
        minSdkVersion ApplicationConfig.minSdk
        targetSdkVersion ApplicationConfig.targetSdk
        versionCode ApplicationConfig.versionCode
        versionName ApplicationConfig.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField "String", "BASE_URL", BASE_URL
            buildConfigField "String", "API_KEY", API_KEY
            testCoverageEnabled true
        }
        release {
            buildConfigField "String", "BASE_URL", BASE_URL
            buildConfigField "String", "API_KEY", API_KEY
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':feature_news')
    implementation project(':feature_news_channel')
    implementation project(':feature_news_category')
    implementation project(':feature_web_browser')
    implementation project(':navigation')

    implementation AndroidXLibraries.appcompat
    implementation AndroidXLibraries.navigation_fragment_ktx
    implementation AndroidXLibraries.navigation_ktx

}
